package dev.lochert.ds.blockchain.http.handlers

import com.sun.net.httpserver.HttpExchange
import com.sun.net.httpserver.HttpHandler
import dev.lochert.ds.blockchain.block.balance.getBalances
import dev.lochert.ds.blockchain.http.HttpUtil
import dev.lochert.ds.blockchain.http.server.Server
import dev.lochert.ds.blockchain.pki.RSAKeyPairs


class TransactionLogsHandler(val server: Server) : HttpHandler {

    // HTML generated by ChatGPT (modified)
    override fun handle(exchange: HttpExchange?) {
        if (exchange == null) return

        val htmlBuilder = StringBuilder()

        htmlBuilder.append(
            """
            <!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="UTF-8">
                <title>Blockchain Explorer</title>
                <style>
                    body { font-family: Arial, sans-serif; background-color: #f5f5f5; padding: 20px; }
                    .block { background-color: #fff; padding: 16px; margin-bottom: 20px; border-radius: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                    .transaction { background-color: #f0f0f0; padding: 10px; margin: 10px 0; border-radius: 8px; }
                    h2 { margin-top: 0; }
                </style>
            </head>
            <body>
                <h1>Blockchain Explorer</h1>
        """
        )

        for ((index, block) in server.blockChain.listOfBlocks.withIndex()) {
            val minerKeyPair = RSAKeyPairs.getRSAKeyPair(block.miner)
            val minerName = minerKeyPair?.name ?: block.miner

            htmlBuilder.append(
                """
                <div class="block">
                    <h2>Block #${index + 1}</h2>
                    <p><strong>Miner:</strong> $minerName</p>
                    <p><strong>Content:</strong> ${block.content}</p>
                    <p><strong>Nonce:</strong> ${block.nonce}</p>
                    <p><strong>BlockHash:</strong> ${block.blockHash}</p>
                    <p><strong>Parent BlockHash:</strong> ${block.parentHash}</p>
                    <h3>Transactions</h3>
            """
            )

            for (transaction in block.transactions) {
                val senderName = RSAKeyPairs.getRSAKeyPair(transaction.sender)?.name ?: transaction.sender
                val receiverName = RSAKeyPairs.getRSAKeyPair(transaction.receiver)?.name ?: transaction.receiver
                val reward = transaction.transactionMinerReward

                htmlBuilder.append(
                    """
                    <div class="transaction">
                        <p><strong>Sender:</strong> $senderName</p>
                        <p><strong>Receiver:</strong> $receiverName</p>
                        <p><strong>Amount:</strong> ${transaction.amount}</p>
                        <p><strong>Miner Reward:</strong> $reward</p>
                    </div>
                """
                )
            }
            htmlBuilder.append("<div>")
            htmlBuilder.append(
                """
            <h3>Balances</h3>
                <ul>
        """.trimIndent()
            )
            for (balance in server.blockChain.getBalances(index)) {
                htmlBuilder.append("<li><strong>${balance.name}:</strong> ${balance.balance}</li>")
            }

            htmlBuilder.append(
                """
            </ul>
         </div>
        """
            )
            htmlBuilder.append("</div>")
        }

        htmlBuilder.append(
            """
            </body>
            </html>
        """
        )

        HttpUtil.sendResponse(exchange, htmlBuilder.toString())
    }


}